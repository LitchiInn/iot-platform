server:
  port: ${DEVICE_SERVER_PORT:23707}
eureka:
  instance:
    hostname: iot-device
    metadata-map:
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}

spring:
  application:
    name: iot-device
  security:
    user:
      name: user
      password: password
    oauth2:
      client:
        scope: server
        access-token-uri: http://47.100.242.161:9004/oauth/token
        client-secret: litchiStudio
        grant-type: client_credentials
        client-id: iot-device
logging:
  config: classpath:logback-spring.xml
  level:
    ROOT: info
    org.springframework.security.oauth2: debug
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
#mybatis
mybatis-plus:
  mapper-locations: classpath:mybatis/*Mapper.xml
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #    capital-mode: true
    #序列接口实现类配置,不在推荐使用此方式进行配置,请使用自定义bean注入
    #    key-generator: com.baomidou.mybatisplus.incrementer.H2KeyGenerator
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 1
    logic-not-delete-value: 0
    #自定义sql注入器,不在推荐使用此方式进行配置,请使用自定义bean注入
    #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现,不在推荐使用此方式进行配置,请使用自定义bean注入
    #    meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效
    sql-parser-cache: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
